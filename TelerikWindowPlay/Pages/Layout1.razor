@page "/1"
@using static TelerikWindowPlay.Data.DataService;
@using Pixata.Extensions
@using System.Collections.ObjectModel

<PageTitle>Layout 2</PageTitle>

<TelerikToolBar Adaptive="false">
  <ToolBarButton OnClick="@(() => _customerListWindowVisible = true)">
    <span class="@IconsHelper.Users me-1"></span> Customers
  </ToolBarButton>
  <ToolBarButton OnClick="@(() => _charityListWindowVisible = true)">
    <span class="@IconsHelper.HandHoldingHeart me-1"></span> Charities
  </ToolBarButton>
</TelerikToolBar>

<h2>@_customerWindows.Count customer window(s) open</h2>

<TelerikWindow Visible="@_customerListWindowVisible" Width="450px">
  <WindowActions>
    <WindowAction Name="Close" OnClick="@(() => _customerListWindowVisible = false)" />
  </WindowActions>
  <WindowTitle>Customers</WindowTitle>
  <WindowContent>
    <TelerikGrid Data="@_customers"
                 Pageable="true"
                 PageSize="15"
                 OnRowClick="CustomerSelected">
      <GridColumns>
        <TextGridColumn Field="@nameof(Customer.FirstName)" Width="200px" />
        <TextGridColumn Field="@nameof(Customer.Surname)" Width="200px" />
      </GridColumns>
    </TelerikGrid>
  </WindowContent>
</TelerikWindow>

@foreach (CustomerDisplay c in _customerWindows) {
  <TelerikWindow Visible="c.Visible">
    <WindowActions>
      <WindowAction Name="Close" OnClick="@(() => _customerWindows.Remove(c))" />
    </WindowActions>
    <WindowTitle>@c.FirstName @c.Surname</WindowTitle>
    <WindowContent>
      <table>
        <tr>
          <th>Email</th>
          <td>@c.Email</td>
        </tr>
        <tr>
          <th>Address</th>
          <td>@c.Address</td>
        </tr>
        <tr>
          <th>City</th>
          <td>@c.City</td>
        </tr>
        <tr>
          <th>Postcode</th>
          <td>@c.Postcode</td>
        </tr>
      </table>
    </WindowContent>
  </TelerikWindow>
}

<TelerikWindow Visible="@_charityListWindowVisible">
  <WindowActions>
    <WindowAction Name="Close" OnClick="@(() => _charityListWindowVisible = false)" />
  </WindowActions>
  <WindowTitle>Charities</WindowTitle>
  <WindowContent>
    <p>TODO AYS - Charity list</p>
  </WindowContent>
</TelerikWindow>

@code {

  private bool _customerListWindowVisible;
  private bool _charityListWindowVisible;

  private readonly ObservableCollection<CustomerDisplay> _customers = Customers
    .Select(c => new CustomerDisplay(c.Id, c.FirstName, c.Surname, c.Email, c.Address, c.City, c.Postcode))
    .OrderBy(c => c.Surname)
    .ThenBy(c => c.FirstName)
    .ToObservableCollection();

  private readonly ObservableCollection<CustomerDisplay> _customerWindows = new();

  private async Task CustomerSelected(GridRowClickEventArgs args) {
    CustomerDisplay customer = args.Item as CustomerDisplay ?? new(-1, "", "", "", "", "", "");
    if (_customerWindows.All(c => c.Id != customer.Id)) {
      _customerWindows.Add(customer);
    }
    customer.Visible = false;
  // Get customer detail from the database
    await Task.Delay(100);
    customer.Visible = true;
  }

}