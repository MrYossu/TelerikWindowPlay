@using System.Collections.ObjectModel
@inherits WindowBase

<TelerikWindow Visible="@Visible"
               Top="@Top"
               Left="@Left"
               Height="@Height"
               Width="@Width"
               LeftChanged="@(s => WindowResized(WindowAttribute.Left, $"{s}"))"
               HeightChanged="@(s => WindowResized(WindowAttribute.Height, $"{s}"))"
               TopChanged="@(s => WindowResized(WindowAttribute.Top, $"{s}"))"
               WidthChanged="@(s => WindowResized(WindowAttribute.Width, $"{s}"))">
  <WindowActions>
    <WindowAction Name="Minimize" />
    <WindowAction Name="Close" OnClick="@Close" />
  </WindowActions>
  <WindowTitle>Charity details - @Charity.Name</WindowTitle>
  <WindowContent>
    <div class="p-3">
      @if (Charity is null) {
        <h1>Big flop</h1>
        <p>Sorry, that charity cannot be found</p>
        <p>Id: @Id</p>
      } else {
        <TelerikTabStrip>
          <TabStripTab Title="Details">
            <table class="table">
              <tr>
                <td>Name</td>
                <td>@Charity.Name</td>
              </tr>
              <tr>
                <td>CharityNumber</td>
                <td>@Charity.Number</td>
              </tr>
              <tr>
                <td>Address</td>
                <td>@Charity.Address</td>
              </tr>
              <tr>
                <td>Postcode</td>
                <td>@Charity.Postcode</td>
              </tr>
              <tr>
                <td>City</td>
                <td>@Charity.City</td>
              </tr>
            </table>
          </TabStripTab>
          <TabStripTab Title="Accounts">
            <TelerikGrid Data="@_accounts"
                         EditMode="@GridEditMode.Popup"
                         OnUpdate=@UpdateItem
                         OnDelete=@DeleteItem
                         OnCreate=@CreateItem
                         Class="telerik-grid">
              <GridToolBarTemplate>
                <GridCommandButton Command="Add" Icon="@IconsHelper.Plus">New</GridCommandButton>
              </GridToolBarTemplate>
              <GridColumns>
                <GridColumn Field="@nameof(CharityBankAccount.Bank)" />
                <GridColumn Field="@nameof(CharityBankAccount.AccountName)" Title="Account name" />
                <GridColumn Field="@nameof(CharityBankAccount.Number)" />
                <GridColumn Field="@nameof(CharityBankAccount.SortCode)" />
                <GridCommandColumn Width="55px">
                  <GridCommandButton Command="Edit" Icon="@IconsHelper.Edit" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary" />
                </GridCommandColumn>
              </GridColumns>
            </TelerikGrid>
          </TabStripTab>
          <TabStripTab Title="Compliance"></TabStripTab>
        </TelerikTabStrip>
      }
    </div>
  </WindowContent>
</TelerikWindow>

@code {

  private Charity? Charity { get; set; }

  protected override void LoadData() => 
    Charity = DataService.Charities.SingleOrDefault(c => c.Id.ToString() == Id);

  private void CreateItem(GridCommandEventArgs args) =>
    _accounts.Add((CharityBankAccount)args.Item);

  private void DeleteItem(GridCommandEventArgs args) =>
    _accounts.Remove((CharityBankAccount)args.Item);

  private void UpdateItem(GridCommandEventArgs args) {
    // TODO AYS - Update
  }

  // For testing only
  private class CharityBankAccount {
    public string Bank { get; set; } = "";
    public string AccountName { get; set; } = "";
    public string Number { get; set; } = "";
    public string SortCode { get; set; } = "";
  }

  private readonly ObservableCollection<CharityBankAccount> _accounts = new() {
    new() {
      Bank = "NatWest",
      AccountName = "Main",
      Number = "123456789",
      SortCode = "11-00-22"
    },
    new() {
      Bank = "NatWest",
      AccountName = "Reserve",
      Number = "6547821332",
      SortCode = "11-00-22"
    },
    new() {
      Bank = "Lloyds",
      AccountName = "Main",
      Number = "541258954",
      SortCode = "54-95-74"
    },
  };

}